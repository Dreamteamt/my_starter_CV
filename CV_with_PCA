from sklearn.datasets import fetch_openml
import numpy as np

mnist = fetch_openml('mnist_784', version=1)
X = mnist.data / 255.0  # нормализация
y = mnist.target.astype(int)

# Предположим, что images — это матрица вида (n_samples, n_pixels)
pca = PCA(n_components=50)
reduced_images = pca.fit_transform(images)

import matplotlib.pyplot as plt

plt.plot(np.cumsum(pca.explained_variance_ratio_))
plt.xlabel('Число компонент')
plt.ylabel('Накопленная доля дисперсии')
plt.grid(True)
plt.show()

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X_pca, y, test_size=0.2)

clf = LogisticRegression(max_iter=1000)
clf.fit(X_train, y_train)

acc = clf.score(X_test, y_test)
print(f"Точность: {acc:.4f}")

# Визуализация

pca_2d = PCA(n_components=2)
X_2d = pca_2d.fit_transform(X[:2000])  # для быстродействия

plt.figure(figsize=(8, 6))
plt.scatter(X_2d[:, 0], X_2d[:, 1], c=y[:2000], cmap='tab10', s=10)
plt.colorbar()
plt.title('PCA проекция в 2D')
plt.show()
